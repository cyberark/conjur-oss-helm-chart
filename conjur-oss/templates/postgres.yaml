{{ if eq .Values.databaseUrl "" }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgres
  labels: &AppPostgresServiceLabels
    app: {{ template "conjur-oss.name" . }}-postgres
    chart: {{ template "conjur-oss.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: postgres
{{- with .Values.postgresLabels }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  ports:
  - port: 5432
  selector: *AppPostgresServiceLabels
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres
  labels: &AppPostgresLabels
    app: {{ template "conjur-oss.name" . }}-postgres
    chart: {{ template "conjur-oss.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: postgres
{{- with .Values.postgresLabels }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels: *AppPostgresLabels
  template:
    metadata:
      labels: *AppPostgresLabels
    spec:
      # TODO: Maybe use a different service account
      serviceAccountName: {{ template "conjur-oss.service-account" . }}

      volumes:
{{- if .Values.seedService.host }}
      {{- include "seedfetcherInitContainerVolumes" . | nindent 6 }}
{{- else }}
      - name: {{ .Release.Name }}-conjur-ssl-cert-pg-volume
        secret:
          secretName: {{ .Release.Name }}-conjur-ssl-cert
          # Permission == 0400. JSON spec doesn’t support octal notation.
          defaultMode: 256
      - name: {{ .Release.Name }}-conjur-ssl-ca-cert-pg-volume
        secret:
          secretName: {{ .Release.Name }}-conjur-ssl-ca-cert
          # Permission == 0400. JSON spec doesn’t support octal notation.
          defaultMode: 256
{{- end }}
{{- if .Values.postgres.persistentVolume.create }}
      - name: postgres-data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-conjur-oss-pvc
{{- end }}

      initContainers:
      {{- include "seedfetcherInitContainer" . | nindent 6 }}

      containers:
      - image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
        imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
        name: postgres
        ports:
        - name: postgres
          containerPort: 5432
        livenessProbe:
          tcpSocket:
            port: postgres
          initialDelaySeconds: 1
          periodSeconds: 5
          timeoutSeconds: 3
          # 1 seconds * 90 = 1.5 minutes
          failureThreshold: 90
        readinessProbe:
          tcpSocket:
            port: postgres
          initialDelaySeconds: 1
          periodSeconds: 5
          timeoutSeconds: 3
          # 1 seconds * 1200 = 20 minutes
          failureThreshold: 1200
{{- if .Values.seedService.host }}
        volumeMounts:
        - name: {{ .Release.Name }}-conjur-certs
          mountPath: /opt/conjur/etc/ssl
          readOnly: true
        - name: {{ .Release.Name }}-conjur-config
          mountPath: /tmp/config
          readOnly: true
{{- else }}
        volumeMounts:
        - name: {{ .Release.Name }}-conjur-ssl-cert-pg-volume
          mountPath: /opt/conjur/etc/ssl/cert
          readOnly: true
        - name: {{ .Release.Name }}-conjur-ssl-ca-cert-pg-volume
          mountPath: /opt/conjur/etc/ssl/ca
          readOnly: true
{{- end }}
{{- if .Values.postgres.persistentVolume.create }}
        - mountPath: "/var/lib/postgresql"
          name: postgres-data
{{- end }}
---
{{ end }}

{{- if and (not .Values.openshift.enabled) (eq .Values.database.url "")}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgres
  labels: &AppPostgresServiceLabels
    app: {{ template "conjur-oss.name" . }}-postgres
    chart: {{ template "conjur-oss.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: postgres
{{- with .Values.postgresLabels }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  ports:
  - port: 5432
  selector: *AppPostgresServiceLabels
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgres
  labels: &AppPostgresLabels
    app: {{ template "conjur-oss.name" . }}-postgres
    chart: {{ template "conjur-oss.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/component: postgres
{{- with .Values.postgresLabels }}
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  serviceName: {{ .Release.Name }}-postgres
  replicas: 1
  selector:
    matchLabels: *AppPostgresLabels
  template:
    metadata:
      labels: *AppPostgresLabels
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
    spec:
      securityContext:
        fsGroup: 999
      containers:
      - image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
        imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
        name: postgres
        args: ["-c", "ssl=on", "-c", "ssl_cert_file=/etc/certs/tls.crt", "-c", "ssl_key_file=/etc/certs/tls.key"]
        env:
        - name: POSTGRES_HOST_AUTH_METHOD
          value: password
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-conjur-database-password
              key: key
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
{{ if .Values.postgres.persistentVolume.create }}
        - name: postgres-data
          mountPath: "/var/lib/postgresql/data"
{{- end }}
        - name: ssl-certs
          mountPath: "/etc/certs"
          readOnly: true
        resources:
{{ toYaml .Values.postgres.resources | indent 10 }}
      volumes:
{{ if .Values.postgres.persistentVolume.create }}
      - name: postgres-data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-conjur-oss-pvc
{{- end }}
      - name: ssl-certs
        secret:
          secretName: {{ .Release.Name }}-conjur-database-ssl
          # Set file permissions to 0600 (which corresponds to 384 decimal)
          defaultMode: 384
{{ end }}
